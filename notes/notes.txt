backlist of things to do:
--------------------

key new features per discussion with Andy Anderson
    upload field observations (photo, geotagged, some dropdown fields, notes w/ voice input)
    donate to avi center (via link to center website, not direct); also probably want a dropdown to pick your "home" center when you first install
    perhaps ability to push notifications of avalanche warnings/watches, etc.
web service
    waiting on or need to contact center
        [see Excel sheet]
    existing integrations: minor issues / enhancements
        CAIC/IPAC -- problem caching their web pages on android due to cache-control:no-store; working with them to address (for now, proxying their webpages)
        CAIC -- to work around cache-control:no-store on not only the forecast pages but also the iframe within that has most of
            the details, we link directly to the iframe piece and proxy that; it works, but we lose the window dressing around it
        UAC -- would like to incorporate tomorrow forecast info too -- need to get it from them on a single page per region
        CAIC -- would like to incorporate tomorrow forecast info too -- need to get it included in the CAAML
        CAIC -- would like to see the region overlap with CBAC resolved
    internal
        figure out way to get usage stats per forecast center / region
        set up real (remote) git
        replace gzippo with express3 built-in compression
        wrap xml2js parsing in try/catch everywhere (like i did on cnfaic)
        update to current semantics (not 0.1.x) with xml2js
        update dependency packages
        fix use of config.js
        use HTML parsing library (cheerio) as opposed by regexs
        create server-oriented regions config file (for dataURL, parser, validation exceptions, etc.), to pull cases out of code
        deal with timezones in a rigorous way (forecasts expiring at a given time, etc.)
        capture all generated forecasts (for example, in S3)?
        further auto-validation of each generated forecast
            check and refine all current results
            add notion of class that is map only, no forecast parsing
            validate by time of day (e.g. forecast should be issued by 8am or whatever)
            have classes of validation (issued daily vs. irregularly, issued day before vs. morning of, etc.)
            on error, capture all inputs, and alert me
            also snapshot user URL vs. data URL vs. my forecast always, for later review
            add automatic, ongoing checks of HTML vs. API results for all api-based sites?
Android
    v1.2
        bugs and cleanup
            change to grey, instead of white, for the "no rating" color
            lifecycle management
                on rotation, don't reload anything
                clean up what happens at what phase of lifecycle
            remember last map position and zoom, and return to that on restart, instead of recentering? and add button to center/zoom map
            redo location services stuff to turn off gps after we have a first fix
            swap top and bottom bars
            update the usage text, from iOS version
            drop custom user agent string (test with NWAC and all other sites)
            bug to look at:
                ANR keyDispatchingTimedOut : com.sebnarware.avalanche/.DangerScaleActivity
                check developer portal for more details
            offline caching not working in all cases? (tests out fine on my phone and Adam's phone...)
        further map performance tuning
            investigate keeping path, and transforming via matrix to pan or scale
            split up path calc per OSM approach
                http://stackoverflow.com/questions/6630868/android-map-drawing-performance-1k-drawings
                http://code.google.com/p/osmdroid/source/browse/trunk/osmdroid-android/src/org/osmdroid/views/MapView.java?r=790
            simplify polygons (point thinning when zoomed out)
            consider creating my own overlay manager class, to unify top-level logic
        new features
            [see iOS list]
        low pri issues
            danger scale view should zoom to fill screen by default (based on orientation)
            title bar shows up in different colors on different android versions
            fix info icon within menu to use explicit resource, vs. system resource that looks different on each platform
                (tried it, but getting dark icon on dark background; so either leave it, or change one the icon color, or the background color)
            blue dot doesn't always show (even though map does position correctly) on Gingerbread; ok on ICS/JB
                test again with my revised FixedMyLocationOverlay, that always does the drawing
            in case of first time app use with no network, app must be shut down to try again once there is network
        for all external builds
            set version string appropriately
            be sure to build with production map key
            do signed export flow
iOS
    v1.6
        map usability
            remember last map position and zoom, and return to that on restart, instead of recentering? and add button to center/zoom map
            map zoom level is different on iPhone 5 device ... Apple responded and explained why, try tweaking settings to make it more consistent
            set a max zoom level
        other
            change to grey, instead of white, for the "no rating" color
            add loading spinner for detailed forecasts too
            drop custom user agent string (test with NWAC and all other sites)
            CAIC urls should be https at the top level, but RNCache only supports HTTP, investigate if its easy/hard to add HTTPS support too
            protect against null values for aviLevel in a forecast (even though this should never happen)
        info section
            change info button to bring up a table of topics (master/detail), not a pop-up
            add link to partners web page
            add info on human factors and decision making, using your brain -- find good reference
        sharing
            make it easy to share (virally) via facebook, twitter
            make it easy to start following Avalanche Forecasts on facebook
    v2
        status bar (or pop-ups of some sort?)
            add status bar with current operation (loading regions, reloading forecasts, forecast last updated xxx ago, read from offline cache, etc.)?
                need to think through how to handle multiple messages, no messages, etc.
            add alert/feedback if there are no avalanche forecast regions near your current position
            add forecasts last fetched time (need to pull from cache or persist, for offline case) (System Font size 13; label height 18)?
        offline mode improvements
            say when cached data is being used
            offline: give message if detailed view unavailable for a region
            really stale detailed forecast content can stay in persistent cache... 
                address by not showing content if forecasts for that region is already out of date?
                flag the detailed forecast page if the forecast is a day or more out of date? (from discussion from Bruce T)
            say when data was cached, for every page?
    v3
        add system message capability, to send dynamic messages to users (e.g. problem with forecast center X; forecast center Y added; etc.)
        more data at-a-glance
            show the danger stack (elevation view) as an icon or popup on the map too within each region?
            click on a region to bring up "selected details" intermediate level of display, driven by the Today/Tomorrow/2DaysOut buttons?
            label regions with their names? give them a danger level icon?
        cache regions.json persistently in app, for performance? (as file is large, and growing) -- probably not needed after digit compression
            do a lightweight validity check to see if file update is necessary (still important to keep dynamic region file updates, e.g. if URL changes)
            note that every time i push to heroku, the file timestamp is updated, so ETag or hash might be better than if-modified-since
            see for ideas: http://iphoneincubator.com/blog/server-communication/how-to-download-a-file-only-if-it-has-been-updated
            store where it cannot be erased by iOS (separate from other cache)
            could implement as a customer NSURLProtocolHandler, in front of the other one
            load new file before proceeding
            make sure i handle both the offline and online cases
            preload cache at app install
            get rid of special no regions.json alert path, if no longer needed
            OR... use a software update style model instead? (never block user waiting for download...
                although investigate what happens to network ops if the app loses focus
            reload regions.json periodically in app (for case where people don't restart the app/phone regularly)
            ability to voice-read the forecast
        make iPad experience better (user request)
        full height launch screen for iPhone5 (no black bars)
        feature to put in a place name, and have the map jump there; and/or have a "favorite place" you can register?
        add a "help your avalanche center" feature to take you to donation pages?
        add more avi reference info?
        add weather info?
        add telemetry info?
        show previous days, for history? allow selecting further into the future?
        add push notifications?
        get app rotation working in all views (or at least danger scale definition view)?


postgis shape simplification flow
--------------------

first, in the "postgis" database:
set search_path to public;

check number of points output:
SELECT ST_NPoints(ST_SimplifyPreserveTopology(ST_GeomFromKML('
KML_fragment_here
		'), 0.01));

get KML:
SELECT ST_AsKML(ST_SimplifyPreserveTopology(ST_GeomFromKML('
KML_fragment_here
		'), 0.01));

