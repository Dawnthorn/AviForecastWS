things to do for launch:
--------------------
v1.0
    waiting for Apple review
post-launch
    flesh out sebnarware.com/icicleventures.com website
    app store optimization (http://www.mobiledevhq.com/ -- help with keywords, etc. -- once app is in app store)
    post on my facebook
    ping all my beta testers
    email bushwackers, wac
    reach out to avalanche centers
v1.1
    beta test
    submit to Apple
    udpate screenshots (get new NWAC detail shot; update to new legend; recheck all)

things to do later:
--------------------
business
    set up bank-to-bank transfer between SmithBarney and USBank, via Mike Napier
    transfer money into account
    switch brinkster hosting (and other biz expenses) to biz account
    figure out better solution for sebnarware.com/icicleventures.com emails
        (brinkster aliases and forwarding didn't work to gmail, would get a delivery failure; although it would forward fine to hotmail)
        (current approach: have brinkster email accounts for each, and have gmail poll them via POP3 into my seth@pollackphoto.com account)
        (drawbacks of current approach: mail may not be polled frequently; limit of 5 accounts)
        (other issues: can use the from field ok in gmail web client, but not in Apple Mail or iPhone mail)
        possible solution: keep separate accounts, but add each account in all of my mail clients?
WS
    try trimming lat/lon to 4 digits after the decimal, to see effect on file size
    need to convert CAIC geometry (from kml or from js)
    CAIC: requires multiple polygons for a single forecast region
        option 1: model as separate subregions, that happen to have the same dataURL and websiteURL
        option 2: add notion of multiple polygons for a single region
    data bug from Parks Canada -- they are working on it
    support other avi centers (contact them as i go)
        Colorado (10 regions) -- have forecasts; have regions
        Utah (7 regions) -- sent email, waiting for more details
        Bridger-Teton (3 regions)
        Gallatin (3 regions)
        other US (look at avalanche.org for list)
        WhistlerBlackcomb: http://www.whistlerblackcomb.com/weather/advisory/index.htm
        Vancouver Island: http://www.islandavalanchebulletin.com/
        Haute Gaspesie: (French; don't have region info) http://www.centreavalanche.qc.ca/bulletins/
        Other CAC that are not currently full forecasts (North Rockies, Bighorn, Yukon)
        Crested Butte (CBAC): http://www.cbavalanchecenter.org/ -- NOTE this is within the CAIC Gunnison zone; based on email with CAIC, skip it for now
    look at libraries for parsing HTML (look at emails from Shep, Doc)
    consider putting dataURL as a field in regions.json file, and getting it that way
    switch to NWAC JSON api when available and stable
    add more NWAC forecast data test cases
    loggly
        don't log to Loggly in test builds, just live deployed ones
        i don't get heroku messages -- could switch to heroku loggly add-on for this, but lower data limit and retention time
        does this meet my server-based trending and alerting needs?
    update linked components?
    better monitoring (e.g. pingdom $10/mo; StillAlive $7/mo)?
iOS
    Bernie saw an endless loop of "Network fail, try again" when on a busy network (thought: perhaps related to app backgrounding? try to repro)
    switch to DLOG macro so logging ins't in released build; also don't log Flurry events in test builds
    ask for app ratings within the app?
    viral aspect -- make it easy to share via FB/twitter?
    get rotation and zooming working correctly on danger level view
    add forecasts last fetched time (need to pull from cache or persist, for offline case)(System Font size 13; label height 18)? add refresh button for explicit refresh forecast?
    add status bar with current operation (loading regions, reloading forecasts, forecast last updated xxx ago, read from offline cache, etc.)?
    cache regions.json persistently in app, for performance? (as file is large, and growing)
        do a lightweight validity check to see if file update is necessary (still important to keep dynamic region file updates, e.g. if URL changes)
        note that every time i push to heroku, the file timestamp is updated, so ETag or hash might be better than if-modified-since
        see for ideas: http://iphoneincubator.com/blog/server-communication/how-to-download-a-file-only-if-it-has-been-updated
        store where it cannot be erased by iOS (separate from other cache)
        could implement as a customer NSURLProtocolHandler, in front of the other one
        load new file before proceeding
        make sure i handle both the offline and online cases
        preload cache at app install
        get rid of special no regions.json alert path, if no longer needed
        OR... use a software update style model instead? (never block user waiting for download...
            although investigate what happens to network ops if the app loses focus
    offline mode
        offline: give message if detailed view unavailable for a region?
        really stale detailed forecast content can stay in persistent cache... address by not showing content if forecasts for that region is already out of date?
    label regions with their names?
    more data at-a-glance
        click on a region bring up "selected details" intermediate level of display, driven by the Today/Tomorrow/2DaysOut buttons?
        some suggested putting some sort of icon (ie, danger level symbol) on the forecast zone would encourage one to tap it
    feature to put in a place name, and have the map jump there; and/or have a "favorite place" you can register?
    deal w/ folks not allowing location services in some way (help text? FAQ on website?)
    add weather info?
    add telemetry info?
    add more avi reference info?
    show previous days, for history? allow selecting further into the future?
    add push notifications?
    update linked components?
    have version numbers for disclaimer accepted (use app version number)?
    change to subscription model?
additional versions to consider
    Pro (ie paid; one time or subscription) iPhone version
    Android version
    PhoneGap version for other platforms (WinPhone, Blackberry, etc.)

avalanche forecast center intro blurb:
--------------------
Hello,

I'm currently developing an iPhone app that displays avalanche conditions "at-a-glance", across multiple forecast regions/centers. My goal is to make avalanche forecasts more readily accessible to folks heading out into the backcountry. Bottom-line danger levels are shown color-coded for each forecast region on a map, based on the selected timeframe (Today/Tomorrow/2 Days Out). Clicking on any region brings up the detailed avalanche forecast from the source forecasting center. All content is cached for offline use, so you can refer back to the information you've seen even if you lose coverage in the mountains.

I currently have it working with the NWAC, CAC, and Parks Canada forecasting centers (30 regions total). Integrating with you all is next on my list. I'd like to eventually include all the avalanche forecasting centers across North America.

I wanted to touch base with you for several reasons.

First, I want to see about the best way to integrate technically. I can certainly parse the HTML (i.e. from the region-specific bulletin web pages) to gather the forecasts, but if you have something designed for programmatic access, such as a JSON or XML API, please let me know. Also, do you happen to have a KML/KMZ file or anything similar (i.e. geographic data) that describes the borders of your forecast subregions in terms of latitude/longitude coordinate paths? This would be a great help towards integration.

Second, if anyone there has an iPhone (or iPod Touch, or iPad) running iOS4.2+, and would be interested in beta testing the app, i'd be glad to have your input.

Third, i want to get the word out about this application within the avalanche community. I hope to launch it in the Apple app store in the next couple of weeks.

Thanks for your input and help.

Seth Pollack






































