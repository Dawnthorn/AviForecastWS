notes on regions:
----------
Canada:
* 12 regions with regular CAC forecasts
* 2 regions under CAC, but with no real forecasts (Bighorn, North Rockies)
* 4 from pc.gc.ca for national parks
* 3 independents (WhistlerBlackcomb, Vancouver Island, Kananaskis)


things to do:
----------
iOS
    data management
        data compression
            express isn't gzip-ing the regions.json right now (85% savings...)   (client side is doing the right thing for Accept-Encoding)
        slow performance to first data drawn when app launched right after phone boots up -- network contention probably
        if forecast load fails for a region, still show it (either show as no data, or at least have it reappear when the forecasts reload)
        consider testing with a large number of (fake) regions, to see how everything works at scale now
        data caching (for offline, and for startup performance)? (https://github.com/steipete/SDURLCache; http://redbot.org; http://www.mnot.net/cache_docs/)
            be sure caching headers are being set appropriately on the server side for dynamic content
            make sure we are sending the if-modified-since for regions.json (examine/log http request headers inside server?)
        add refresh button for explicit forecast refresh? OR add forecasts last fetched time (but has to be across all forecasts)?
        combine the forecast lookups into one/fewer calls?
        track and throttle global refreshes (don't refresh if already done within the last few seconds)?
        refresh regions.json periodically (may be hard...)?
        only fetch forecasts if overlay view actually gets loaded?
    spinny wheel for time when data is loading; also for when web pages are loading
    is legend readable enough? (consider taller&narrower font; hyphenated words; linking from legend to info page, or having it slide down or pop up)
    liability warning?
    ask for app ratings?
    mapkit crash bug?
        see: http://stackoverflow.com/questions/8022609/ios-5-mapkit-crashes-with-overlays-when-zoom-pan
        see: https://devforums.apple.com/message/584753
        see: https://devforums.apple.com/thread/48154?tstart=0
    testing
        test on various iOS versions
        test on various device types
        check behavior on various networks (WiFi vs. 3G vs. Edge)
        check no network behavior
        test various cache cases
        check no GPS behavior
        check low memory behavior
WS
    support other avi centers
        CAC -- get access to their XML api
        pc.gc.ca
        canada independents
        other US regions
    cleanup
        use regions.json for URL lookup? (probably need separate fields for server endpoint vs. client webpage; could also store other metadata like parsing style)
    testing
        set up unit tests (via Mocha) for the web scraping piece, with examples of real pages from the sites as well as other corner cases, to ensure accuracy
        scale testing?
    operations
        remove console messages for happy path, or switch to a real logger and turn down (via Winston)
        trending? (e.g. number of requests, # of users, etc.)
        monitoring? (e.g. pingdom)
        alerting?
        staging env?
 other
    LLC
        get confirmation from BLS
        update Seattle biz license
        update my developer account with Apple from individual to business (see http://developer.apple.com/support/ios/account-management.html)
        create bank account for LLC
    set up www.sebnarware.com website (via brinkster; see https://help.brinkster.com/KB/a125/how-do-i-redirect-a-domain-or-subdomain.aspx)
    get domain for icicleventures too?
    paid or free? thinking free
    take screenshots
    submit app to Apple
    contact other avalanche centers?
    marketing
future possibilities
    switch to NWAC JSON api when available
    feature to put in a place name, and have the map jump there
    push notifications
    weather info
    telemetry info
    add previous days to view history
    more avi reference info
    consider updating shared components
    iPad-specific version
    Android version (or PhoneGap version)
